/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.10.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.api.rest.web.resources;

import com.api.rest.model.pojo.User;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import org.springdoc.core.annotations.ParameterObject;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.List;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-01-13T20:20:08.077059900+01:00[Europe/Rome]", comments = "Generator version: 7.10.0")
@Validated
@Tag(name = "Users", description = "the Users API")
@RequestMapping("${openapi.exampleRestArchetype.base-path:}")
public interface UsersApi {

    /**
     * GET /users : Gets all User
     * Gets all users present.
     *
     * @return Successful operation (status code 200)
     */
    @Operation(
        operationId = "getUsers",
        summary = "Gets all User",
        description = "Gets all users present.",
        tags = { "Users" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful operation", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = User.class)))
            })
        }
    )
    @GetMapping(
        value = "/users",
        produces = { "application/json" }
    )
    ResponseEntity<List<User>> getUsers(
        @ParameterObject final Pageable pageable
    );

}
